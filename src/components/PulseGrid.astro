---
// Geometric Pulse Grid Component - Grid patterns with wave-like pulse animations
---

<div class="pulse-grid">
  <div class="grid-container">
    <!-- Main grid pattern -->
    <div class="grid-pattern">
      <!-- Row 1 -->
      <div class="grid-cell cell-1-1" style="--delay: 0s"></div>
      <div class="grid-cell cell-1-2" style="--delay: 0.2s"></div>
      <div class="grid-cell cell-1-3" style="--delay: 0.4s"></div>
      <div class="grid-cell cell-1-4" style="--delay: 0.6s"></div>
      <div class="grid-cell cell-1-5" style="--delay: 0.8s"></div>
      
      <!-- Row 2 -->
      <div class="grid-cell cell-2-1" style="--delay: 0.2s"></div>
      <div class="grid-cell cell-2-2" style="--delay: 0.4s"></div>
      <div class="grid-cell cell-2-3" style="--delay: 0.6s"></div>
      <div class="grid-cell cell-2-4" style="--delay: 0.8s"></div>
      <div class="grid-cell cell-2-5" style="--delay: 1s"></div>
      
      <!-- Row 3 -->
      <div class="grid-cell cell-3-1" style="--delay: 0.4s"></div>
      <div class="grid-cell cell-3-2" style="--delay: 0.6s"></div>
      <div class="grid-cell cell-3-3 center-cell" style="--delay: 0s"></div>
      <div class="grid-cell cell-3-4" style="--delay: 1s"></div>
      <div class="grid-cell cell-3-5" style="--delay: 1.2s"></div>
      
      <!-- Row 4 -->
      <div class="grid-cell cell-4-1" style="--delay: 0.6s"></div>
      <div class="grid-cell cell-4-2" style="--delay: 0.8s"></div>
      <div class="grid-cell cell-4-3" style="--delay: 1s"></div>
      <div class="grid-cell cell-4-4" style="--delay: 1.2s"></div>
      <div class="grid-cell cell-4-5" style="--delay: 1.4s"></div>
      
      <!-- Row 5 -->
      <div class="grid-cell cell-5-1" style="--delay: 0.8s"></div>
      <div class="grid-cell cell-5-2" style="--delay: 1s"></div>
      <div class="grid-cell cell-5-3" style="--delay: 1.2s"></div>
      <div class="grid-cell cell-5-4" style="--delay: 1.4s"></div>
      <div class="grid-cell cell-5-5" style="--delay: 1.6s"></div>
    </div>
    
    <!-- Floating accent shapes -->
    <div class="accent-shapes">
      <div class="accent-circle accent-1"></div>
      <div class="accent-triangle accent-2"></div>
      <div class="accent-square accent-3"></div>
      <div class="accent-hexagon accent-4"></div>
    </div>
  </div>
</div>

<style>
  .pulse-grid {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 320px;
    height: 320px;
    position: relative;
  }
  
  .grid-container {
    position: relative;
    width: 100%;
    height: 100%;
  }
  
  .grid-pattern {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(5, 1fr);
    gap: 8px;
    width: 100%;
    height: 100%;
    padding: 20px;
  }
  
  .grid-cell {
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(96, 165, 250, 0.3), rgba(16, 185, 129, 0.3));
    border-radius: 8px;
    animation: cell-pulse 4s ease-in-out infinite;
    animation-delay: var(--delay);
    transform-origin: center;
    transition: all 0.3s ease;
  }
  
  .center-cell {
    background: linear-gradient(135deg, rgba(239, 68, 68, 0.6), rgba(249, 115, 22, 0.6));
    border-radius: 50%;
    animation: center-pulse 0.83s ease-in-out infinite;
    animation-delay: 0s;
  }
  
  /* Accent floating shapes */
  .accent-shapes {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }
  
  .accent-circle {
    position: absolute;
    width: 12px;
    height: 12px;
    background: rgba(168, 85, 247, 0.7);
    border-radius: 50%;
    top: 20%;
    right: 15%;
    animation: float-rotate 4s ease-in-out infinite;
  }
  
  .accent-triangle {
    position: absolute;
    width: 0;
    height: 0;
    border-left: 8px solid transparent;
    border-right: 8px solid transparent;
    border-bottom: 14px solid rgba(34, 197, 94, 0.7);
    top: 70%;
    left: 10%;
    animation: float-rotate 5s ease-in-out infinite reverse;
  }
  
  .accent-square {
    position: absolute;
    width: 10px;
    height: 10px;
    background: rgba(249, 115, 22, 0.7);
    transform: rotate(45deg);
    top: 15%;
    left: 20%;
    animation: float-scale 3.5s ease-in-out infinite;
  }
  
  .accent-hexagon {
    position: absolute;
    width: 14px;
    height: 14px;
    background: rgba(59, 130, 246, 0.7);
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    bottom: 20%;
    right: 20%;
    animation: float-bounce 4.5s ease-in-out infinite;
  }
  
  /* Sequential glow animation */
  @keyframes cell-pulse {
    0%, 90%, 100% {
      transform: scale(0.8);
      opacity: 0.3;
      box-shadow: 0 0 0 0 rgba(96, 165, 250, 0);
      background: linear-gradient(135deg, rgba(96, 165, 250, 0.3), rgba(16, 185, 129, 0.3));
    }
    10%, 20% {
      transform: scale(1.1);
      opacity: 1;
      box-shadow: 
        0 0 15px rgba(96, 165, 250, 0.6),
        0 0 30px rgba(96, 165, 250, 0.4),
        0 0 45px rgba(96, 165, 250, 0.2);
      background: linear-gradient(135deg, rgba(96, 165, 250, 0.9), rgba(16, 185, 129, 0.9));
    }
  }
  
  @keyframes center-pulse {
    0%, 80%, 100% {
      transform: scale(1);
      opacity: 0.6;
      box-shadow: 0 0 0 0 rgba(239, 68, 68, 0);
      background: linear-gradient(135deg, rgba(239, 68, 68, 0.6), rgba(249, 115, 22, 0.6));
    }
    10%, 30% {
      transform: scale(1.3);
      opacity: 1;
      box-shadow: 
        0 0 20px rgba(239, 68, 68, 0.8),
        0 0 40px rgba(249, 115, 22, 0.6),
        0 0 60px rgba(239, 68, 68, 0.4);
      background: linear-gradient(135deg, rgba(239, 68, 68, 1), rgba(249, 115, 22, 1));
    }
  }
  
  @keyframes float-rotate {
    0%, 100% {
      transform: translateY(0px) rotate(0deg);
      opacity: 0.6;
    }
    50% {
      transform: translateY(-10px) rotate(180deg);
      opacity: 1;
    }
  }
  
  @keyframes float-scale {
    0%, 100% {
      transform: rotate(45deg) scale(1);
      opacity: 0.6;
    }
    50% {
      transform: rotate(45deg) scale(1.3);
      opacity: 1;
    }
  }
  
  @keyframes float-bounce {
    0%, 100% {
      transform: translateY(0px);
      opacity: 0.6;
    }
    25% {
      transform: translateY(-8px);
      opacity: 0.8;
    }
    50% {
      transform: translateY(-4px);
      opacity: 1;
    }
    75% {
      transform: translateY(-8px);
      opacity: 0.8;
    }
  }
  
  /* Interactive hover effects */
  .pulse-grid:hover .grid-cell {
    animation-duration: 1.5s;
  }
  
  .pulse-grid:hover .center-cell {
    animation-duration: 1s;
  }
  
  .grid-cell:hover {
    transform: scale(1.1);
    opacity: 1;
    z-index: 10;
  }
  
  /* Dark mode adjustments */
  @media (prefers-color-scheme: dark) {
    .grid-cell {
      background: linear-gradient(135deg, rgba(59, 130, 246, 0.6), rgba(34, 197, 94, 0.6));
    }
    
    .center-cell {
      background: linear-gradient(135deg, rgba(248, 113, 113, 0.8), rgba(251, 146, 60, 0.8));
    }
    
    .accent-circle {
      background: rgba(196, 181, 253, 0.8);
    }
    
    .accent-triangle {
      border-bottom-color: rgba(74, 222, 128, 0.8);
    }
    
    .accent-square {
      background: rgba(251, 146, 60, 0.8);
    }
    
    .accent-hexagon {
      background: rgba(147, 197, 253, 0.8);
    }
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .pulse-grid {
      width: 280px;
      height: 280px;
    }
    
    .grid-pattern {
      gap: 6px;
      padding: 15px;
    }
  }
</style>
