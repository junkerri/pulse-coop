---
// Theme toggle component using ShadCN styling
---

<button
  id="theme-toggle"
  class="fixed top-6 right-6 z-50 inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] h-10 w-10 border bg-white/90 dark:bg-slate-800/90 backdrop-blur-sm border-slate-200/50 dark:border-slate-600/50 hover:border-emerald-300/50 dark:hover:border-emerald-500/50 shadow-lg hover:shadow-xl hover:bg-emerald-50 dark:hover:bg-emerald-900/30"
  aria-label="Toggle theme"
>
  <!-- Sun icon for light mode -->
  <svg
    id="sun-icon"
    class="h-5 w-5 rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0 pointer-events-none shrink-0 text-amber-600 dark:text-amber-400"
    fill="none"
    stroke="currentColor"
    viewBox="0 0 24 24"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
    />
  </svg>
  
  <!-- Moon icon for dark mode -->
  <svg
    id="moon-icon"
    class="absolute h-5 w-5 rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100 pointer-events-none shrink-0 text-slate-600 dark:text-slate-300"
    fill="none"
    stroke="currentColor"
    viewBox="0 0 24 24"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
    />
  </svg>
  
  <span class="sr-only">Toggle theme</span>
</button>

<script>
  // Theme toggle functionality
  const themeToggle = document.getElementById('theme-toggle');
  const sunIcon = document.getElementById('sun-icon');
  const moonIcon = document.getElementById('moon-icon');

  // Check for saved theme preference or default to 'light'
  const currentTheme = localStorage.getItem('theme') || 'light';
  document.documentElement.setAttribute('data-theme', currentTheme);
  document.documentElement.classList.add(currentTheme);
  updateIcon(currentTheme);

  themeToggle?.addEventListener('click', () => {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    
    document.documentElement.setAttribute('data-theme', newTheme);
    document.documentElement.classList.remove('light', 'dark');
    document.documentElement.classList.add(newTheme);
    localStorage.setItem('theme', newTheme);
    updateIcon(newTheme);
  });

  function updateIcon(theme: string) {
    // In light mode: show sun icon, hide moon icon
    // In dark mode: show moon icon, hide sun icon
    if (theme === 'dark') {
      sunIcon?.classList.add('hidden');
      moonIcon?.classList.remove('hidden');
    } else {
      sunIcon?.classList.remove('hidden');
      moonIcon?.classList.add('hidden');
    }
  }

  // Add smooth transition for theme changes
  document.documentElement.style.transition = 'background-color 0.3s ease, color 0.3s ease';
</script> 