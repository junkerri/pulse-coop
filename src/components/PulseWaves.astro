---
// Pulse Waves Component - Animated waves that flow across sections
export interface Props {
  variant?: 'hero' | 'section' | 'contact';
  intensity?: 'subtle' | 'medium' | 'strong';
}

const { variant = 'section', intensity = 'medium' } = Astro.props;
---

<div class={`pulse-waves pulse-waves--${variant} pulse-waves--${intensity}`}>
  <!-- Seamless infinite flowing wave -->
  <div class="flowing-wave">
    <div class="wave-container">
      <svg viewBox="0 0 1200 120" preserveAspectRatio="none">
        <path d="M0,60 C150,30 300,90 450,60 C600,30 750,90 900,60 C1050,30 1200,90 1200,60 L1200,0 L0,0 Z" />
      </svg>
    </div>
    <div class="wave-container wave-layer-2">
      <svg viewBox="0 0 1200 120" preserveAspectRatio="none">
        <path d="M0,80 C200,50 400,110 600,80 C800,50 1000,110 1200,80 L1200,0 L0,0 Z" />
      </svg>
    </div>
  </div>
</div>

<style>
  .pulse-waves {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    pointer-events: none;
    z-index: 1;
  }
  
  /* Seamless infinite flowing wave */
  .flowing-wave {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  
  .wave-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 300%;
    height: 100%;
    animation: wave-seamless 30s linear infinite;
  }
  
  .wave-container svg {
    position: absolute;
    top: 0;
    left: 0;
    width: 33.333%;
    height: 100%;
  }
  
  /* Create three copies of the wave for seamless looping */
  .wave-container::before,
  .wave-container::after {
    content: '';
    position: absolute;
    top: 0;
    width: 33.333%;
    height: 100%;
    background-image: inherit;
    background-size: 100% 100%;
    background-repeat: no-repeat;
  }
  
  .wave-container::before {
    left: 33.333%;
  }
  
  .wave-container::after {
    left: 66.666%;
  }
  
  .wave-container path {
    fill: rgba(96, 165, 250, 0.15);
    animation: wave-pulse 8s ease-in-out infinite;
  }
  
  .wave-container.wave-layer-2 {
    animation-duration: 25s;
    animation-direction: reverse;
  }
  
  .wave-container.wave-layer-2 path {
    fill: rgba(96, 165, 250, 0.08);
    animation: wave-pulse 12s ease-in-out infinite 3s;
  }
  
  /* Seamless wave animation - moves exactly one wave length */
  @keyframes wave-seamless {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-33.333%);
    }
  }
  
  /* Wave pulsing animation */
  @keyframes wave-pulse {
    0%, 100% {
      fill-opacity: 0.6;
      transform: scaleY(1);
    }
    25% {
      fill-opacity: 0.8;
      transform: scaleY(1.02);
    }
    50% {
      fill-opacity: 1;
      transform: scaleY(1.05);
    }
    75% {
      fill-opacity: 0.8;
      transform: scaleY(1.02);
    }
  }
  
  /* Variant styles */
  .pulse-waves--hero .wave-container {
    animation-duration: 20s;
  }
  
  .pulse-waves--hero .wave-container.wave-layer-2 {
    animation-duration: 15s;
  }
  
  .pulse-waves--hero .wave-container path {
    fill: rgba(96, 165, 250, 0.25);
  }
  
  .pulse-waves--hero .wave-container.wave-layer-2 path {
    fill: rgba(96, 165, 250, 0.15);
  }
  
  .pulse-waves--section .wave-container {
    animation-duration: 35s;
  }
  
  .pulse-waves--section .wave-container.wave-layer-2 {
    animation-duration: 40s;
  }
  
  .pulse-waves--section .wave-container path {
    fill: rgba(96, 165, 250, 0.18);
  }
  
  .pulse-waves--section .wave-container.wave-layer-2 path {
    fill: rgba(96, 165, 250, 0.1);
  }
  
  .pulse-waves--contact .wave-container {
    animation-duration: 45s;
  }
  
  .pulse-waves--contact .wave-container.wave-layer-2 {
    animation-duration: 50s;
  }
  
  .pulse-waves--contact .wave-container path {
    fill: rgba(96, 165, 250, 0.12);
  }
  
  .pulse-waves--contact .wave-container.wave-layer-2 path {
    fill: rgba(96, 165, 250, 0.06);
  }
  
  /* Intensity variants */
  .pulse-waves--subtle .wave-container path {
    fill: rgba(96, 165, 250, 0.08);
  }
  
  .pulse-waves--subtle .wave-container.wave-layer-2 path {
    fill: rgba(96, 165, 250, 0.04);
  }
  
  .pulse-waves--medium .wave-container path {
    fill: rgba(96, 165, 250, 0.15);
  }
  
  .pulse-waves--medium .wave-container.wave-layer-2 path {
    fill: rgba(96, 165, 250, 0.08);
  }
  
  .pulse-waves--strong .wave-container {
    animation-duration: 15s;
  }
  
  .pulse-waves--strong .wave-container.wave-layer-2 {
    animation-duration: 12s;
  }
  
  .pulse-waves--strong .wave-container path {
    fill: rgba(96, 165, 250, 0.3);
  }
  
  .pulse-waves--strong .wave-container.wave-layer-2 path {
    fill: rgba(96, 165, 250, 0.18);
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .wave-container {
      animation-duration: 40s;
    }
    
    .wave-container.wave-layer-2 {
      animation-duration: 35s;
    }
    
    .pulse-waves--hero .wave-container {
      animation-duration: 30s;
    }
    
    .pulse-waves--hero .wave-container.wave-layer-2 {
      animation-duration: 25s;
    }
    
    .pulse-waves--section .wave-container {
      animation-duration: 50s;
    }
    
    .pulse-waves--section .wave-container.wave-layer-2 {
      animation-duration: 55s;
    }
    
    .pulse-waves--contact .wave-container {
      animation-duration: 60s;
    }
    
    .pulse-waves--contact .wave-container.wave-layer-2 {
      animation-duration: 65s;
    }
  }
  
  /* Reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .wave-container {
      animation-duration: 120s;
    }
    
    .wave-container path {
      animation: none;
    }
  }
</style>